name: Makefile CI

on:
  workflow_call:
    secrets:
      CHECKOUT_SHARED:
        required: true
      OSSINDEX_USERNAME:
        required: true
      OSSINDEX_PASSWORD:
        required: true
      SAFETY_API_KEY:
        required: true

defaults:
  run:
    shell: bash -el {0}

env:
  CONDA_VERSION: latest

jobs:
  CI:
    name: QC and Tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11, 3.12, 3.13]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set ref
        id: set-ref
        run: |
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            echo "Using PR merge ref to avoid running workflows on forked repo."
            echo "ref=refs/pull/${{ github.event.pull_request.number }}/merge" >> $GITHUB_OUTPUT
          elif [[ -n "${{ github.ref || '' }}" ]]; then
            echo "Using github.ref"
            echo "ref=${{ github.ref }}" >> $GITHUB_OUTPUT
          else
            echo "Using fallback default ref"
            echo "ref=refs/heads/main" >> $GITHUB_OUTPUT
          fi

      - name: Set Default Branch
        run: |
          git config --global init.defaultBranch main

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.set-ref.outputs.ref }}
          submodules: recursive
          token: ${{ secrets.CHECKOUT_SHARED }} # Token with full repo scope.
        
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          miniconda-version: ${{ env.CONDA_VERSION }}
          python-version: ${{ matrix.python-version }}

      - name: Build Environment
        run: |
          DEV_ENV_NAME=dev_env_${{ matrix.os }}_${{ matrix.python-version }}
          echo "DEV_ENV_NAME=${DEV_ENV_NAME}" >> $GITHUB_ENV
          make build-env CONDA_ENV_NAME=${DEV_ENV_NAME} PYTHON_VERSION=${{ matrix.python-version }}
          conda run -n ${DEV_ENV_NAME} make install

      # TODO: Skip 3.13 QC until msgspec releases compatible update. (pytype uses msgspec, but it doesn't work on 3.13 yet.)
      # https://github.com/crickets-and-comb/shared/issues/49
      - name: Run QC
        if: ${{ matrix.python-version != '3.13' && contains(matrix.os, 'ubuntu') }}
        run: |
          echo "username: ${{ secrets.OSSINDEX_USERNAME }}" > $HOME/.oss-index.config
          echo "password: ${{ secrets.OSSINDEX_PASSWORD }}" >> $HOME/.oss-index.config
          chmod 600 $HOME/.oss-index.config
          conda run -n ${{ env.DEV_ENV_NAME }} make full-qc SAFETY_API_KEY=${{ secrets.SAFETY_API_KEY }}

      - name: Run Tests
        run: |
          conda run -n ${{ env.DEV_ENV_NAME }} make full-test

      - name: Build Doc
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          conda run -n ${{ env.DEV_ENV_NAME }} make build-doc